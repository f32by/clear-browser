--- a/chrome/browser/ui/views/tabs/new_tab_button.cc
+++ b/chrome/browser/ui/views/tabs/new_tab_button.cc
@@ -64,7 +64,7 @@ int GetNewTabPromoStringSpecifier() {
 constexpr char NewTabButton::kClassName[];
 
 // static
-const gfx::Size NewTabButton::kButtonSize{28, 28};
+const gfx::Size NewTabButton::kButtonSize{24, 24};
 
 class NewTabButton::HighlightPathGenerator
     : public views::HighlightPathGenerator {
--- a/chrome/browser/ui/views/frame/browser_non_client_frame_view_mac.mm
+++ b/chrome/browser/ui/views/frame/browser_non_client_frame_view_mac.mm
@@ -143,7 +143,7 @@ int BrowserNonClientFrameViewMac::GetTop
 
   // Mac seems to reserve 1 DIP of the top inset as a resize handle.
   constexpr int kResizeHandleHeight = 1;
-  constexpr int kTabstripTopInset = 8;
+  constexpr int kTabstripTopInset = 6;
   int top_inset = kTabstripTopInset;
   if (EverHasVisibleBackgroundTabShapes()) {
     top_inset =
--- a/chrome/browser/ui/layout_constants.cc
+++ b/chrome/browser/ui/layout_constants.cc
@@ -30,11 +30,7 @@ int GetLayoutConstant(LayoutConstant con
   const bool touch_ui = ui::MaterialDesignController::touch_ui();
   switch (constant) {
     case BOOKMARK_BAR_HEIGHT:
-      // The fixed margin ensures the bookmark buttons appear centered relative
-      // to the white space above and below.
-      static constexpr int kBookmarkBarAttachedVerticalMargin = 4;
-      return GetLayoutConstant(BOOKMARK_BAR_BUTTON_HEIGHT) +
-             kBookmarkBarAttachedVerticalMargin;
+      return GetLayoutConstant(BOOKMARK_BAR_BUTTON_HEIGHT);
     case BOOKMARK_BAR_BUTTON_HEIGHT:
       return touch_ui ? 36 : 28;
     case BOOKMARK_BAR_NTP_HEIGHT:
@@ -54,7 +50,7 @@ int GetLayoutConstant(LayoutConstant con
     case LOCATION_BAR_ELEMENT_PADDING:
       return touch_ui ? 3 : 2;
     case LOCATION_BAR_HEIGHT:
-      return touch_ui ? 36 : 28;
+      return touch_ui ? 36 : 26;
     case LOCATION_BAR_ICON_SIZE:
       return touch_ui ? 20 : 16;
     case TAB_AFTER_TITLE_PADDING:
@@ -64,7 +60,7 @@ int GetLayoutConstant(LayoutConstant con
     case TAB_ALERT_INDICATOR_ICON_WIDTH:
       return touch_ui ? 12 : 16;
     case TAB_HEIGHT:
-      return (touch_ui ? 41 : 34) + GetLayoutConstant(TABSTRIP_TOOLBAR_OVERLAP);
+      return (touch_ui ? 41 : 30) + GetLayoutConstant(TABSTRIP_TOOLBAR_OVERLAP);
     case TAB_PRE_TITLE_PADDING:
       return 8;
     case TAB_STACK_DISTANCE:
